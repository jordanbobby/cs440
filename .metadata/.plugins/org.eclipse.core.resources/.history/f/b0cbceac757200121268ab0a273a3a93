
import java.io.File;
import java.io.FileNotFoundException;

import com.sleepycat.bind.tuple.IntegerBinding;
import com.sleepycat.bind.tuple.StringBinding;
import com.sleepycat.db.*;

public class EntryPoint
{
	private static EnvironmentConfig envConfig_ = null;
	private static File envHome_;
	
	private static Environment env_;
	/*
    import com.sleepycat.db.*

    EnvironmentConfig envConfig_ = new EnvironmentConfig();
    envConfig_.setAllowCreate(true);

    envConfig_.setInitializeCache(true);

    envConfig_.setTransactional(false);
    envConfig_.setInitializeLocking(false);

    envConfig_.setPrivate(true);

    envConfig_.setCacheSize(1024 * 1024);

    File envHome_ = new File(“/home/schoolDB/”);
    
  */  
    public static void main(String[] args) throws FileNotFoundException, DatabaseException{
    	
    	createEnv();
    	System.out.println("hello world");
    	
    	DatabaseConfig dbConfig = new DatabaseConfig();
    	
		dbConfig.setType(DatabaseType.BTREE);
		//dbConfig.setCacheSize(4 * 1024 * 1024);
		//dbConfig.setCreateDir(envHome_);
		
		Database db; 
		
		db = env_.openDatabase(null,"imdb.db","imdb", dbConfig);
			
		
		ImdbData entry = new ImdbData();
		entry.setFileName("45.xml");
		entry.setFileSize(1000);
		entry.setContent("this is some content");
		
		
		DatabaseEntry key = new DatabaseEntry();
		DatabaseEntry data = new DatabaseEntry();
		String keyvalue  = "45.xml";
		
		StringBinding.stringToEntry(keyvalue, key);
		ImdbDataTupleBinding binding = new ImdbDataTupleBinding();
		binding.objectToEntry(entry, data);
		
		db.put(null, key, data);
		
		
		//Retrieve the data.
		key = new DatabaseEntry();
		data = new DatabaseEntry();
		StringBinding.stringToEntry(keyvalue, key);
		
		while(db.get(null, key, data, null) == OperationStatus.SUCCESS){
			
			ImdbData x = (ImdbData)binding.entryToObject(data);
			
			System.out.println(x.toString());
		}
    	
    }
	private static void createEnv()
	{
		try
	    {
			envHome_ = new File("/nfs/stak/students/m/mcconnjo/cs440/Homework2/resources");
			envConfig_ = new EnvironmentConfig();
			envConfig_.setErrorStream(System.err);
			envConfig_.setErrorPrefix("cs440_hw2");
			envConfig_.setAllowCreate(true);
			envConfig_.setInitializeCache(true);
			envConfig_.setTransactional(false);
			envConfig_.setPrivate(true);
			envConfig_.setInitializeLocking(false);
			envConfig_.setCacheSize(1024 * 1024);
			env_ = new Environment(envHome_, envConfig_);
		}
		catch(DatabaseException e)
		{
			System.err.println("createEnv: Database Exception caught " +
	                    e.toString());
		}
		catch(Exception e)
		{
			System.err.println("createEnv: " + e.toString());
		}
	}
}
